{
	"id": 0,
	"name": "discord-rest - v1.0.11-dev",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "discord-rest",
	"children": [
		{
			"id": 375,
			"name": "ChannelEnum",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 377,
					"name": "DM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 33,
							"character": 4
						}
					],
					"defaultValue": "1"
				},
				{
					"id": 379,
					"name": "GROUP_DM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 35,
							"character": 4
						}
					],
					"defaultValue": "3"
				},
				{
					"id": 380,
					"name": "GUILD_CATEGORY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 36,
							"character": 4
						}
					],
					"defaultValue": "4"
				},
				{
					"id": 386,
					"name": "GUILD_DIRECTORY",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 42,
							"character": 4
						}
					],
					"defaultValue": "10"
				},
				{
					"id": 387,
					"name": "GUILD_FORUM",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 43,
							"character": 4
						}
					],
					"defaultValue": "11"
				},
				{
					"id": 381,
					"name": "GUILD_NEWS",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 37,
							"character": 4
						}
					],
					"defaultValue": "5"
				},
				{
					"id": 382,
					"name": "GUILD_NEWS_THREAD",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 38,
							"character": 4
						}
					],
					"defaultValue": "6"
				},
				{
					"id": 384,
					"name": "GUILD_PRIVATE_THREAD",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 40,
							"character": 4
						}
					],
					"defaultValue": "8"
				},
				{
					"id": 383,
					"name": "GUILD_PUBLIC_THREAD",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 39,
							"character": 4
						}
					],
					"defaultValue": "7"
				},
				{
					"id": 385,
					"name": "GUILD_STAGE_VOICE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 41,
							"character": 4
						}
					],
					"defaultValue": "9"
				},
				{
					"id": 376,
					"name": "GUILD_TEXT",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 32,
							"character": 4
						}
					],
					"defaultValue": "0"
				},
				{
					"id": 378,
					"name": "GUILD_VOICE",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 34,
							"character": 4
						}
					],
					"defaultValue": "2"
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						377,
						379,
						380,
						386,
						387,
						381,
						382,
						384,
						383,
						385,
						376,
						378
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/ChannelType.ts",
					"line": 31,
					"character": 12
				}
			]
		},
		{
			"id": 254,
			"name": "Application",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Application class.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```js\nconst application = new Application(client);\n```"
					}
				]
			},
			"children": [
				{
					"id": 255,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 256,
							"name": "new Application",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 257,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 254,
								"name": "Application"
							},
							"overwrites": {
								"type": "reference",
								"id": 146,
								"name": "Base.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 145,
						"name": "Base.constructor"
					}
				},
				{
					"id": 264,
					"name": "bot_public",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 265,
					"name": "bot_require_code_grant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 269,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 148,
						"name": "Base.client"
					}
				},
				{
					"id": 262,
					"name": "cover_image",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 260,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 261,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 258,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 259,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 266,
					"name": "owner",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "APIUser",
						"package": "discord-api-types",
						"name": "APIUser"
					}
				},
				{
					"id": 263,
					"name": "rpc_origins",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 267,
					"name": "resolver",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Application.ts",
							"line": 45,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 268,
							"name": "resolver",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "APIApplication",
										"package": "discord-api-types",
										"name": "APIApplication"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						255
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						264,
						265,
						269,
						262,
						260,
						261,
						258,
						259,
						266,
						263
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						267
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/Application.ts",
					"line": 13,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 144,
					"name": "Base"
				}
			]
		},
		{
			"id": 144,
			"name": "Base",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Base class for all structures."
			},
			"children": [
				{
					"id": 145,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 8,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "new Base",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 147,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 144,
								"name": "Base"
							}
						}
					]
				},
				{
					"id": 148,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						145
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						148
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/Base.ts",
					"line": 6,
					"character": 13
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1,
					"name": "Channel"
				},
				{
					"type": "reference",
					"id": 46,
					"name": "Guild"
				},
				{
					"type": "reference",
					"id": 149,
					"name": "User"
				},
				{
					"type": "reference",
					"id": 196,
					"name": "Message"
				},
				{
					"type": "reference",
					"id": 225,
					"name": "Oauth2"
				},
				{
					"type": "reference",
					"id": 254,
					"name": "Application"
				}
			]
		},
		{
			"id": 1,
			"name": "Channel",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Channel class.",
				"tags": [
					{
						"tag": "link",
						"text": "https://discord.com/developers/docs/resources/channel#channel-object"
					},
					{
						"tag": "example",
						"text": "\n```js\nconst channel = new Channel(client,{\nid: '123',\nname: 'test',\ntype: ChannelType.GUILD_TEXT,\nguild_id: '123',\nposition: 1,\n}\n"
					}
				]
			},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new Channel",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								},
								{
									"id": 5,
									"name": "channel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 352,
										"name": "ChannelType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Channel"
							},
							"overwrites": {
								"type": "reference",
								"id": 146,
								"name": "Base.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 145,
						"name": "Base.constructor"
					}
				},
				{
					"id": 20,
					"name": "application_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 15,
					"name": "bitrate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 28,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 148,
						"name": "Base.client"
					}
				},
				{
					"id": 8,
					"name": "guild_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14,
					"name": "last_message_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22,
					"name": "last_pin_timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13,
					"name": "nsfw",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19,
					"name": "owner_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21,
					"name": "parent_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10,
					"name": "permission_overwrites",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 370,
							"name": "PermissionOverwrite"
						}
					}
				},
				{
					"id": 9,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17,
					"name": "recipients",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 149,
							"name": "User"
						}
					}
				},
				{
					"id": 12,
					"name": "topic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 7,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 16,
					"name": "user_limit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23,
					"name": "checkCurrentType",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 64,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 24,
							"name": "checkCurrentType",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 25,
					"name": "send",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Channel.ts",
							"line": 151,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "send",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Send a message to the channel.",
								"returns": "The message object.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nchannel.send(\"Hello World!\");\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 27,
									"name": "corp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 391,
												"name": "MessageType"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 196,
										"name": "Message"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						20,
						15,
						28,
						8,
						18,
						6,
						14,
						22,
						11,
						13,
						19,
						21,
						10,
						9,
						17,
						12,
						7,
						16
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						23,
						25
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/Channel.ts",
					"line": 23,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 144,
					"name": "Base"
				}
			]
		},
		{
			"id": 490,
			"name": "ChannelController",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 491,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/ChannelController.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 492,
							"name": "new ChannelController",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 493,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 490,
								"name": "ChannelController"
							}
						}
					]
				},
				{
					"id": 494,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/ChannelController.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					}
				},
				{
					"id": 495,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/ChannelController.ts",
							"line": 10,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 496,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 497,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1,
										"name": "Channel"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 498,
					"name": "fetchAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/ChannelController.ts",
							"line": 32,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 499,
							"name": "fetchAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetches all channels in a guild.",
								"tags": [
									{
										"tag": "memberof",
										"text": "ChannelController"
									},
									{
										"tag": "example",
										"text": "\n```js\nclient.channels.fetchAll(\"12345678901234567\").then(channels => {\n  console.log(channels);\n});\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 500,
									"name": "guildId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The id of the guild."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1,
											"name": "Channel"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						491
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						494
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						495,
						498
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/controller/ChannelController.ts",
					"line": 5,
					"character": 13
				}
			]
		},
		{
			"id": 29,
			"name": "Client",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Client class.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```js\nconst client = new Client({\n   token: \"token\"\n});\n```\n"
					}
				]
			},
			"children": [
				{
					"id": 30,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 31,
							"name": "new Client",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 32,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 388,
										"name": "ClientType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 29,
								"name": "Client"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "application",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 254,
						"name": "Application"
					}
				},
				{
					"id": 39,
					"name": "channels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 490,
						"name": "ChannelController"
					}
				},
				{
					"id": 40,
					"name": "guilds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 509,
						"name": "GuildController"
					}
				},
				{
					"id": 42,
					"name": "oauth2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 225,
						"name": "Oauth2"
					}
				},
				{
					"id": 35,
					"name": "rest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 287,
						"name": "RestManager"
					}
				},
				{
					"id": 41,
					"name": "secret",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 149,
						"name": "User"
					}
				},
				{
					"id": 38,
					"name": "users",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 501,
						"name": "UserController"
					}
				},
				{
					"id": 34,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 43,
					"name": "setOauth2Secret",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Client.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 44,
							"name": "setOauth2Secret",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set 0auth2 credentials to authenticate with the Discord API.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nclient.setOauth2Token(\"token\");\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 45,
									"name": "secret",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						30
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						37,
						39,
						40,
						42,
						35,
						41,
						33,
						36,
						38,
						34
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/Client.ts",
					"line": 21,
					"character": 13
				}
			]
		},
		{
			"id": 46,
			"name": "Guild",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Guild class.",
				"tags": [
					{
						"tag": "link",
						"text": "https://discord.com/developers/docs/resources/guild#guild-object"
					},
					{
						"tag": "example",
						"text": "\n```js\nconst guild = new Guild(client,{\nid: '123',\nname: 'test',\nicon: '123',\nsplash: '123',\nowner_id: '123',\nregion: '123',\n})\n```\n"
					}
				]
			},
			"children": [
				{
					"id": 47,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "new Guild",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 49,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								},
								{
									"id": 50,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "APIGuild",
										"package": "discord-api-types",
										"name": "APIGuild"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 46,
								"name": "Guild"
							},
							"overwrites": {
								"type": "reference",
								"id": 146,
								"name": "Base.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 145,
						"name": "Base.constructor"
					}
				},
				{
					"id": 61,
					"name": "afkChannelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 62,
					"name": "afkTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 72,
					"name": "applicationId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 86,
					"name": "approximateMemberCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 59,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 87,
					"name": "approximatePresenceCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 60,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 80,
					"name": "banner",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 143,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 148,
						"name": "Base.client"
					}
				},
				{
					"id": 66,
					"name": "defaultMessageNotifications",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 79,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 56,
					"name": "discoverySplash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 69,
					"name": "emojis",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "APIEmoji",
							"package": "discord-api-types",
							"name": "APIEmoji"
						}
					}
				},
				{
					"id": 67,
					"name": "explicitContentFilter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 70,
					"name": "features",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 53,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 54,
					"name": "iconHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 51,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 77,
					"name": "maxMembers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 50,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 76,
					"name": "maxPresences",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 85,
					"name": "maxVideoChannelUsers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 58,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 71,
					"name": "mfaLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 52,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 89,
					"name": "nsfwLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 62,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57,
					"name": "owner",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 58,
					"name": "ownerId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59,
					"name": "permissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 83,
					"name": "preferredLocale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 82,
					"name": "premiumSubscriptionCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 55,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 81,
					"name": "premiumTier",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 54,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 91,
					"name": "premium_progress_bar_enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 84,
					"name": "publicUpdatesChannelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 60,
					"name": "region",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 68,
					"name": "roles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "APIRole",
							"package": "discord-api-types",
							"name": "APIRole"
						}
					}
				},
				{
					"id": 75,
					"name": "rulesChannelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 55,
					"name": "splash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 90,
					"name": "stickers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "APISticker",
									"package": "discord-api-types",
									"name": "APISticker"
								}
							}
						]
					}
				},
				{
					"id": 74,
					"name": "systemChannelFlags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 73,
					"name": "systemChannelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 78,
					"name": "vanityUrlCode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 65,
					"name": "verificationLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 88,
					"name": "welcomeScreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"qualifiedName": "APIGuildWelcomeScreen",
								"package": "discord-api-types",
								"name": "APIGuildWelcomeScreen"
							}
						]
					}
				},
				{
					"id": 64,
					"name": "widgetChannelId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 63,
					"name": "widgetEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 94,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 137,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Delete the current guild.",
								"returns": "An empty promise.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nguild.delete().then(() => {\n console.log('Guild deleted.');\n});\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "literal",
										"value": null
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 96,
					"name": "edit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 166,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 97,
							"name": "edit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Edit the current guild.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nguild.edit({\n name: 'Discord API',\n region: 'us-west',\n verificationLevel: 3,\n defaultMessageNotifications: 1,\n explicitContentFilter: 2,\n afkChannelId: '123456789012345678',\n}).then(guild => {\n console.log(guild.name);\n //expected output => 'Discord API' \n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 98,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "APIGuild",
										"package": "discord-api-types",
										"name": "APIGuild"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 46,
										"name": "Guild"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 92,
					"name": "getChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 118,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 93,
							"name": "getChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get all channels in the guild.",
								"returns": "The guild's channels.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nguild.getChannels().then(channels => {\n console.log(channels);\n});\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1,
											"name": "Channel"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 99,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Guild.ts",
							"line": 184,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 100,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the JSON representation of the guild.",
								"returns": "Current guild into a JSON object.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nguild.toJSON();\n```\n"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 101,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 112,
											"name": "afkChannelId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 196,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 113,
											"name": "afkTimeout",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 197,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 123,
											"name": "applicationId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 207,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 137,
											"name": "approximateMemberCount",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 221,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 138,
											"name": "approximatePresenceCount",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 222,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 131,
											"name": "banner",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 215,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 117,
											"name": "defaultMessageNotifications",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 201,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 130,
											"name": "description",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 214,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 107,
											"name": "discoverySplash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 191,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 120,
											"name": "emojis",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 204,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "APIEmoji",
													"package": "discord-api-types",
													"name": "APIEmoji"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 118,
											"name": "explicitContentFilter",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 202,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 121,
											"name": "features",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 205,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 104,
											"name": "icon",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 188,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 105,
											"name": "iconHash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 189,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 102,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 186,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 128,
											"name": "maxMembers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 212,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 127,
											"name": "maxPresences",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 211,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 136,
											"name": "maxVideoChannelUsers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 220,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 122,
											"name": "mfaLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 206,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 103,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 187,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 140,
											"name": "nsfwLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 224,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 108,
											"name": "owner",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 192,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 109,
											"name": "ownerId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 193,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 110,
											"name": "permissions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 194,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 134,
											"name": "preferredLocale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 218,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 133,
											"name": "premiumSubscriptionCount",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 217,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 132,
											"name": "premiumTier",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 216,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 142,
											"name": "premium_progress_bar_enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 226,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "..."
										},
										{
											"id": 135,
											"name": "publicUpdatesChannelId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 219,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 111,
											"name": "region",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 195,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 119,
											"name": "roles",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 203,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "APIRole",
													"package": "discord-api-types",
													"name": "APIRole"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 126,
											"name": "rulesChannelId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 210,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 106,
											"name": "splash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 190,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 141,
											"name": "stickers",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 225,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"qualifiedName": "APISticker",
															"package": "discord-api-types",
															"name": "APISticker"
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 125,
											"name": "systemChannelFlags",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 209,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 124,
											"name": "systemChannelId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 208,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 129,
											"name": "vanityUrlCode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 213,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 116,
											"name": "verificationLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 200,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 139,
											"name": "welcomeScreen",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 223,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"qualifiedName": "APIGuildWelcomeScreen",
														"package": "discord-api-types",
														"name": "APIGuildWelcomeScreen"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 115,
											"name": "widgetChannelId",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 199,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 114,
											"name": "widgetEnabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/Guild.ts",
													"line": 198,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												112,
												113,
												123,
												137,
												138,
												131,
												117,
												130,
												107,
												120,
												118,
												121,
												104,
												105,
												102,
												128,
												127,
												136,
												122,
												103,
												140,
												108,
												109,
												110,
												134,
												133,
												132,
												142,
												135,
												111,
												119,
												126,
												106,
												141,
												125,
												124,
												129,
												116,
												139,
												115,
												114
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						47
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						61,
						62,
						72,
						86,
						87,
						80,
						143,
						66,
						79,
						56,
						69,
						67,
						70,
						53,
						54,
						51,
						77,
						76,
						85,
						71,
						52,
						89,
						57,
						58,
						59,
						83,
						82,
						81,
						91,
						84,
						60,
						68,
						75,
						55,
						90,
						74,
						73,
						78,
						65,
						88,
						64,
						63
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						94,
						96,
						92,
						99
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/Guild.ts",
					"line": 23,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 144,
					"name": "Base"
				}
			]
		},
		{
			"id": 509,
			"name": "GuildController",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 510,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/GuildController.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 511,
							"name": "new GuildController",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 512,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 509,
								"name": "GuildController"
							}
						}
					]
				},
				{
					"id": 513,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/GuildController.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					}
				},
				{
					"id": 514,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/GuildController.ts",
							"line": 10,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 515,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 516,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 46,
										"name": "Guild"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						510
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						513
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						514
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/controller/GuildController.ts",
					"line": 5,
					"character": 13
				}
			]
		},
		{
			"id": 196,
			"name": "Message",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Message class.",
				"tags": [
					{
						"tag": "link",
						"text": "https://discord.com/developers/docs/resources/channel#message-object"
					},
					{
						"tag": "example",
						"text": "\n```js\nconst message = new Message(client,{\n id: '123',\n channel_id: '123',\n guild_id: '123',\n author: {\n     id: '123',\n     username: 'test',\n     discriminator: '1234',\n     avatar: '123',\n     bot: false,\n     system: false,\n },\n content: 'test',\n timestamp: 123,\n edited_timestamp: 123,\n tts: false,\n mention_everyone: false,\n mentions: [],\n mention_roles: [],\n attachments: [],\n embeds: [],\n reactions: [],\n nonce: '123',\n pinned: false,\n webhook_id: '123',\n})\n```\n"
					}
				]
			},
			"children": [
				{
					"id": 197,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 198,
							"name": "new Message",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 199,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								},
								{
									"id": 200,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 391,
										"name": "MessageType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 196,
								"name": "Message"
							},
							"overwrites": {
								"type": "reference",
								"id": 146,
								"name": "Base.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 145,
						"name": "Base.constructor"
					}
				},
				{
					"id": 214,
					"name": "attachments",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 463,
							"name": "attachmentsType"
						}
					}
				},
				{
					"id": 205,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 471,
						"name": "UserType"
					}
				},
				{
					"id": 203,
					"name": "channel_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 224,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 148,
						"name": "Base.client"
					}
				},
				{
					"id": 207,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 50,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 209,
					"name": "edited_timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 215,
					"name": "embeds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 58,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 411,
							"name": "EmbedType"
						}
					}
				},
				{
					"id": 204,
					"name": "guild_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 201,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 206,
					"name": "member",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "APIGuildMember",
						"package": "discord-api-types",
						"name": "APIGuildMember"
					}
				},
				{
					"id": 211,
					"name": "mention_everyone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 54,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 213,
					"name": "mention_roles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 212,
					"name": "mentions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 55,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 471,
							"name": "UserType"
						}
					}
				},
				{
					"id": 217,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 60,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 218,
					"name": "pinned",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 216,
					"name": "reactions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 59,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 455,
							"name": "ReactionsType"
						}
					}
				},
				{
					"id": 208,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 210,
					"name": "tts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 202,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 219,
					"name": "webhook_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 62,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 220,
					"name": "getChannel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 94,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "getChannel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the channel the message was sent in.",
								"returns": "A Channel promise.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst channel = await message.getChannel();\nconsole.log(channel.name);\n```\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1,
												"name": "Channel"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 222,
					"name": "getGuild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Message.ts",
							"line": 110,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 223,
							"name": "getGuild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the guild the message was sent in.",
								"returns": "A Guild promise.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst guild = await message.getGuild();\nconsole.log(guild.name);\n```\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 46,
												"name": "Guild"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						197
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						214,
						205,
						203,
						224,
						207,
						209,
						215,
						204,
						201,
						206,
						211,
						213,
						212,
						217,
						218,
						216,
						208,
						210,
						202,
						219
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						220,
						222
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/Message.ts",
					"line": 43,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 144,
					"name": "Base"
				}
			]
		},
		{
			"id": 225,
			"name": "Oauth2",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "0auth2 class to manage Discord 0auth2 endpoints.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```js\nconst client = new Client({\n  token: \"token\"\n});\nclient.setOauth2Token(\"token\");\n```"
					}
				]
			},
			"children": [
				{
					"id": 226,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "new Oauth2",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 228,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 225,
								"name": "Oauth2"
							},
							"overwrites": {
								"type": "reference",
								"id": 146,
								"name": "Base.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 145,
						"name": "Base.constructor"
					}
				},
				{
					"id": 253,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 148,
						"name": "Base.client"
					}
				},
				{
					"id": 229,
					"name": "tokenObject",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "RESTPostOAuth2AccessTokenResult",
						"package": "discord-api-types",
						"name": "RESTPostOAuth2AccessTokenResult"
					}
				},
				{
					"id": 230,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "APIUser",
						"package": "discord-api-types",
						"name": "APIUser"
					}
				},
				{
					"id": 236,
					"name": "getAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 59,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 237,
							"name": "getAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the access token.",
								"returns": "The token object.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nclient.getAccessToken(\"code\", \"https://example.com/callback\").then((token) => {\n console.log(token);\n});\n```"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#authorization-code-flow"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#get-token-endpoint"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#response-format\n"
									}
								]
							},
							"parameters": [
								{
									"id": 238,
									"name": "code",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The code."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 239,
									"name": "redirect_uri",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The redirect URI."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "RESTPostOAuth2AccessTokenResult",
										"package": "discord-api-types",
										"name": "RESTPostOAuth2AccessTokenResult"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 248,
					"name": "getGuilds",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 173,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 249,
							"name": "getGuilds",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the user's guilds.",
								"returns": "The guilds object.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nclient.getGuilds().then((guilds) => {\n   console.log(guilds);\n});\n```"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#get-guilds"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/guilds\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "RESTGetAPICurrentUserGuildsResult",
										"package": "discord-api-types",
										"name": "RESTGetAPICurrentUserGuildsResult"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 231,
					"name": "getRedirectURL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "getRedirectURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the URL to redirect to.",
								"returns": "The URL to redirect to.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst url = client.getRedirectURL(\"https://example.com/callback\", [\"identify\"], \"state\");\n```"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#redirecting-users-to-the-authorization-page"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#authorization-code-flow"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#scopes"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#scope-identify"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#scope-email"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#scope-guilds"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#scope-guilds-join\n"
									}
								]
							},
							"parameters": [
								{
									"id": 233,
									"name": "redirect_uri",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The redirect URI."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 234,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The scope."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 235,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The state."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"prompt\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 246,
					"name": "getUser",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 147,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 247,
							"name": "getUser",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the user.",
								"returns": "The user object.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nclient.getUser().then((user) => {\n    console.log(user);\n});\n```"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#get-user\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "APIUser",
										"package": "discord-api-types",
										"name": "APIUser"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 250,
					"name": "joinGuild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 199,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 251,
							"name": "joinGuild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Join user to a guild.",
								"returns": "The guild object.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nclient.joinGuild(\"guild_id\").then((guild) => {\n  console.log(guild);\n});\n```"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#join-guild"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/guilds\n"
									}
								]
							},
							"parameters": [
								{
									"id": 252,
									"name": "guild_id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The guild ID."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "APIGuild",
										"package": "discord-api-types",
										"name": "APIGuild"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "refreshAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 91,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "refreshAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Refresh the access token.",
								"returns": "The token object.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nclient.refreshAccessToken(\"refresh_token\").then((token) => {\n         console.log(token);\n});\n```"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#refreshing-tokens"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#get-token-endpoint"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#response-format\n"
									}
								]
							},
							"parameters": [
								{
									"id": 242,
									"name": "refresh_token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The refresh token."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "RESTPostOAuth2AccessTokenResult",
										"package": "discord-api-types",
										"name": "RESTPostOAuth2AccessTokenResult"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 243,
					"name": "revokeAccessToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Oauth2.ts",
							"line": 121,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "revokeAccessToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Revoke the access token.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nclient.revokeAccessToken(\"token\").then(() => {\n     console.log(\"Token revoked\");\n});\n```"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#revoking-tokens"
									},
									{
										"tag": "see",
										"text": "https://discordapp.com/developers/docs/topics/oauth2#get-token-endpoint\n"
									}
								]
							},
							"parameters": [
								{
									"id": 245,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The token."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						226
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						253,
						229,
						230
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						236,
						248,
						231,
						246,
						250,
						240,
						243
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/Oauth2.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 144,
					"name": "Base"
				}
			]
		},
		{
			"id": 287,
			"name": "RestManager",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 288,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "new RestManager",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 290,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 291,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "10"
								}
							],
							"type": {
								"type": "reference",
								"id": 287,
								"name": "RestManager"
							}
						}
					]
				},
				{
					"id": 292,
					"name": "baseURL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 295,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 296,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 297,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 298,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 293,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 14,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 294,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 15,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 335,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 97,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 336,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 337,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 338,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 339,
									"name": "headers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 340,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 341,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 342,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										]
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 337,
										"name": "T"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 309,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 85,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 310,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 311,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 312,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 313,
									"name": "headers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 314,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 315,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 316,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										]
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 311,
										"name": "T"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 343,
					"name": "patch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 101,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "patch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 345,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 346,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 347,
									"name": "body",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "reference",
												"qualifiedName": "BodyInit",
												"package": "@types/node-fetch",
												"name": "BodyInit"
											},
											{
												"type": "reference",
												"qualifiedName": "FormData",
												"package": "form-data",
												"name": "FormData"
											}
										]
									},
									"defaultValue": "null"
								},
								{
									"id": 348,
									"name": "headers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 349,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 350,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 351,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										]
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 345,
										"name": "T"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 317,
					"name": "post",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 89,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 318,
							"name": "post",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 319,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 320,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 321,
									"name": "body",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "reference",
												"qualifiedName": "BodyInit",
												"package": "@types/node-fetch",
												"name": "BodyInit"
											},
											{
												"type": "reference",
												"qualifiedName": "FormData",
												"package": "form-data",
												"name": "FormData"
											}
										]
									},
									"defaultValue": "null"
								},
								{
									"id": 322,
									"name": "headers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 323,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 324,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 325,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										]
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 319,
										"name": "T"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 326,
					"name": "put",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 93,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 327,
							"name": "put",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 328,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 329,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 330,
									"name": "body",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "reference",
												"qualifiedName": "BodyInit",
												"package": "@types/node-fetch",
												"name": "BodyInit"
											},
											{
												"type": "reference",
												"qualifiedName": "FormData",
												"package": "form-data",
												"name": "FormData"
											}
										]
									},
									"defaultValue": "null"
								},
								{
									"id": 331,
									"name": "headers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 332,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 333,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 334,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										]
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 328,
										"name": "T"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 299,
					"name": "request",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 33,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 300,
							"name": "request",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 301,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 302,
									"name": "endpoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 303,
									"name": "headers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 304,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 305,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 306,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											}
										]
									},
									"defaultValue": "{}"
								},
								{
									"id": 307,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 308,
									"name": "body",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "reference",
												"qualifiedName": "BodyInit",
												"package": "@types/node-fetch",
												"name": "BodyInit"
											},
											{
												"type": "reference",
												"qualifiedName": "FormData",
												"package": "form-data",
												"name": "FormData"
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 301,
										"name": "T"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						288
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						292,
						295,
						293,
						294
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						335,
						309,
						343,
						317,
						326,
						299
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/rest/restManager.ts",
					"line": 12,
					"character": 13
				}
			]
		},
		{
			"id": 149,
			"name": "User",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "User class.",
				"tags": [
					{
						"tag": "link",
						"text": "https://discord.com/developers/docs/resources/user"
					},
					{
						"tag": "example",
						"text": "\n```js\nconst user = new User(client,{\n id: '123',\n username: 'test',\n discriminator: '1234',\n avatar: '123',\n bot: false,\n system: false,\n})\n```\n"
					}
				]
			},
			"children": [
				{
					"id": 150,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 151,
							"name": "new User",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 152,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								},
								{
									"id": 153,
									"name": "user",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 471,
										"name": "UserType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 149,
								"name": "User"
							},
							"overwrites": {
								"type": "reference",
								"id": 146,
								"name": "Base.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 145,
						"name": "Base.constructor"
					}
				},
				{
					"id": 167,
					"name": "accent_color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 162,
					"name": "avatar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 165,
					"name": "banner",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 166,
					"name": "banner_color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 160,
					"name": "bot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 195,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/Base.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 148,
						"name": "Base.client"
					}
				},
				{
					"id": 155,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 164,
					"name": "discriminator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 158,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 161,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 159,
					"name": "locale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 157,
					"name": "premium_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 156,
					"name": "public_flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 163,
					"name": "system",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 154,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 168,
					"name": "createDM",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 63,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 169,
							"name": "createDM",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Make a DM with the current user.",
								"returns": "The DM channel.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst channel = await user.createDM();\n```\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1,
										"name": "Channel"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 172,
					"name": "getAvatarURL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 97,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "getAvatarURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the user's avatar URL.",
								"returns": "The avatar URL.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst avatarURL = user.getAvatarURL();\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "avatar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 486,
										"name": "AvatarFormat"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "getBannerURL",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 135,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "getBannerURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get the user Banner URL.",
								"returns": "The banner URL.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst bannerURL = user.getBannerURL();\n```\n"
									}
								]
							},
							"parameters": [
								{
									"id": 177,
									"name": "banner",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 486,
										"name": "AvatarFormat"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 170,
					"name": "getDMChannels",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 79,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 171,
							"name": "getDMChannels",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get all dm of the Bot.\nThis endpoint is only available for bots.",
								"returns": "The dm channels.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```js\nconst dms = await user.getDMChannels();\n```\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1,
											"name": "Channel"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 178,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/structures/User.ts",
							"line": 163,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 179,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 180,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 191,
											"name": "accent_color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 175,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 183,
											"name": "avatar",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 167,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 189,
											"name": "banner",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 173,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 190,
											"name": "banner_color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 174,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 185,
											"name": "bot",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 169,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "..."
										},
										{
											"id": 194,
											"name": "created_at",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 178,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 184,
											"name": "discriminator",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 168,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 188,
											"name": "flags",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 172,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 181,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 165,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 187,
											"name": "locale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 171,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 192,
											"name": "premium_type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 176,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 193,
											"name": "public_flags",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 177,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 186,
											"name": "system",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 170,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "..."
										},
										{
											"id": 182,
											"name": "username",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "lib/structures/User.ts",
													"line": 166,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												191,
												183,
												189,
												190,
												185,
												194,
												184,
												188,
												181,
												187,
												192,
												193,
												186,
												182
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						150
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						167,
						162,
						165,
						166,
						160,
						195,
						155,
						164,
						158,
						161,
						159,
						157,
						156,
						163,
						154
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						168,
						172,
						175,
						170,
						178
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/structures/User.ts",
					"line": 23,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 144,
					"name": "Base"
				}
			]
		},
		{
			"id": 501,
			"name": "UserController",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 502,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/UserController.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 503,
							"name": "new UserController",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 504,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 29,
										"name": "Client"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 501,
								"name": "UserController"
							}
						}
					]
				},
				{
					"id": 505,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/UserController.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "Client"
					}
				},
				{
					"id": 506,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/controller/UserController.ts",
							"line": 11,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 507,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 508,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 149,
										"name": "User"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						502
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						505
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						506
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/controller/UserController.ts",
					"line": 5,
					"character": 13
				}
			]
		},
		{
			"id": 486,
			"name": "AvatarFormat",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 489,
					"name": "dynamic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 488,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 487,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						489,
						488,
						487
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/UserType.ts",
					"line": 18,
					"character": 17
				}
			]
		},
		{
			"id": 352,
			"name": "ChannelType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 367,
					"name": "application_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 362,
					"name": "bitrate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 355,
					"name": "guild_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 365,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 353,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 361,
					"name": "last_message_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 369,
					"name": "last_pin_timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 358,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 360,
					"name": "nsfw",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 366,
					"name": "owner_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 368,
					"name": "parent_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 357,
					"name": "permission_overwrites",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 370,
							"name": "PermissionOverwrite"
						}
					}
				},
				{
					"id": 356,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 364,
					"name": "recipients",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 149,
							"name": "User"
						}
					}
				},
				{
					"id": 359,
					"name": "topic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 354,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 363,
					"name": "user_limit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						367,
						362,
						355,
						365,
						353,
						361,
						369,
						358,
						360,
						366,
						368,
						357,
						356,
						364,
						359,
						354,
						363
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/ChannelType.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 388,
			"name": "ClientType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 389,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ClientType.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 390,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/ClientType.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						389,
						390
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/ClientType.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 411,
			"name": "EmbedType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 444,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 60,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 445,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 448,
									"name": "icon_url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 63,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 446,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 61,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 449,
									"name": "proxy_icon_url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 64,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 447,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 62,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										448,
										446,
										449,
										447
									]
								}
							]
						}
					}
				},
				{
					"id": 417,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 414,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 450,
					"name": "fields",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 451,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 454,
										"name": "inline",
										"kind": 1024,
										"kindString": "Property",
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "lib/types/MessageType.ts",
												"line": 69,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									{
										"id": 452,
										"name": "name",
										"kind": 1024,
										"kindString": "Property",
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "lib/types/MessageType.ts",
												"line": 67,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 453,
										"name": "value",
										"kind": 1024,
										"kindString": "Property",
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "lib/types/MessageType.ts",
												"line": 68,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"kind": 1024,
										"children": [
											454,
											452,
											453
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 418,
					"name": "footer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 419,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 421,
									"name": "icon_url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 422,
									"name": "proxy_icon_url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 37,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 420,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										421,
										422,
										420
									]
								}
							]
						}
					}
				},
				{
					"id": 423,
					"name": "image",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 424,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 427,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 42,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 426,
									"name": "proxy_url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 41,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 425,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 40,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 428,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 43,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										427,
										426,
										425,
										428
									]
								}
							]
						}
					}
				},
				{
					"id": 440,
					"name": "provider",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 441,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 442,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 57,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 443,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 58,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										442,
										443
									]
								}
							]
						}
					}
				},
				{
					"id": 429,
					"name": "thumbnail",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 430,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 433,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 48,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 432,
									"name": "proxy_url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 47,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 431,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 46,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 434,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 49,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										433,
										432,
										431,
										434
									]
								}
							]
						}
					}
				},
				{
					"id": 416,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 412,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 413,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 415,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 435,
					"name": "video",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 436,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 438,
									"name": "height",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 53,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 437,
									"name": "url",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 52,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 439,
									"name": "width",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 54,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										438,
										437,
										439
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						444,
						417,
						414,
						450,
						418,
						423,
						440,
						429,
						416,
						412,
						413,
						415,
						435
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/MessageType.ts",
					"line": 27,
					"character": 17
				}
			]
		},
		{
			"id": 391,
			"name": "MessageType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 405,
					"name": "attachments",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 463,
							"name": "attachmentsType"
						}
					}
				},
				{
					"id": 396,
					"name": "author",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 471,
						"name": "UserType"
					}
				},
				{
					"id": 394,
					"name": "channel_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 398,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 400,
					"name": "edited_timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 406,
					"name": "embeds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 411,
							"name": "EmbedType"
						}
					}
				},
				{
					"id": 395,
					"name": "guild_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 392,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 397,
					"name": "member",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "APIGuildMember",
						"package": "discord-api-types",
						"name": "APIGuildMember"
					}
				},
				{
					"id": 402,
					"name": "mention_everyone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 404,
					"name": "mention_roles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 403,
					"name": "mentions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 471,
							"name": "UserType"
						}
					}
				},
				{
					"id": 408,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 409,
					"name": "pinned",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 407,
					"name": "reactions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 455,
							"name": "ReactionsType"
						}
					}
				},
				{
					"id": 399,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 401,
					"name": "tts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 393,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 410,
					"name": "webhook_id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						405,
						396,
						394,
						398,
						400,
						406,
						395,
						392,
						397,
						402,
						404,
						403,
						408,
						409,
						407,
						399,
						401,
						393,
						410
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/MessageType.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 370,
			"name": "PermissionOverwrite",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 373,
					"name": "allow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 374,
					"name": "deny",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 371,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 372,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/ChannelType.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						373,
						374,
						371,
						372
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/ChannelType.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 455,
			"name": "ReactionsType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 456,
					"name": "count",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 74,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 458,
					"name": "emoji",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 459,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 462,
									"name": "animated",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 79,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 461,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 78,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "lib/types/MessageType.ts",
											"line": 77,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										462,
										461,
										460
									]
								}
							]
						}
					}
				},
				{
					"id": 457,
					"name": "me",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 75,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						456,
						458,
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/MessageType.ts",
					"line": 73,
					"character": 17
				}
			]
		},
		{
			"id": 270,
			"name": "RequestOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 279,
					"name": "agent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"qualifiedName": "Agent",
								"package": "@types/node",
								"name": "Agent"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 280,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 281,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 282,
													"name": "parsedUrl",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"qualifiedName": "URL",
														"package": "@types/node",
														"name": "URL"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"qualifiedName": "Agent",
														"package": "@types/node",
														"name": "Agent"
													}
												]
											}
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.agent"
					}
				},
				{
					"id": 275,
					"name": "body",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "BodyInit",
						"package": "@types/node-fetch",
						"name": "BodyInit"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.body"
					}
				},
				{
					"id": 283,
					"name": "compress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.compress"
					}
				},
				{
					"id": 284,
					"name": "follow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.follow"
					}
				},
				{
					"id": 271,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/rest/restManager.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 272,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 273,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 274,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					},
					"overwrites": {
						"type": "reference",
						"name": "RequestInit.headers"
					}
				},
				{
					"id": 276,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 50,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.method"
					}
				},
				{
					"id": 277,
					"name": "redirect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "RequestRedirect",
						"package": "@types/node-fetch",
						"name": "RequestRedirect"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.redirect"
					}
				},
				{
					"id": 278,
					"name": "signal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"qualifiedName": "AbortSignal",
								"package": "@types/node-fetch",
								"name": "AbortSignal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.signal"
					}
				},
				{
					"id": 285,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.size"
					}
				},
				{
					"id": 286,
					"name": "timeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node-fetch/index.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "RequestInit.timeout"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						279,
						275,
						283,
						284,
						271,
						276,
						277,
						278,
						285,
						286
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/rest/restManager.ts",
					"line": 5,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "RequestInit",
					"package": "@types/node-fetch",
					"name": "RequestInit"
				}
			]
		},
		{
			"id": 471,
			"name": "UserType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 485,
					"name": "accent_color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 475,
					"name": "avatar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 477,
					"name": "banner",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 484,
					"name": "banner_color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 476,
					"name": "bot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 483,
					"name": "created_at",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 474,
					"name": "discriminator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 478,
					"name": "flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 472,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 479,
					"name": "locale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 480,
					"name": "premium_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 481,
					"name": "public_flags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 482,
					"name": "system",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 473,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/UserType.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						485,
						475,
						477,
						484,
						476,
						483,
						474,
						478,
						472,
						479,
						480,
						481,
						482,
						473
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/UserType.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 463,
			"name": "attachmentsType",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 465,
					"name": "filename",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 85,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 469,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 89,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 464,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 84,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 468,
					"name": "proxy_url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 88,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 466,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 86,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 467,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 87,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 470,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "lib/types/MessageType.ts",
							"line": 90,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						465,
						469,
						464,
						468,
						466,
						467,
						470
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/types/MessageType.ts",
					"line": 83,
					"character": 17
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 8,
			"children": [
				375
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				254,
				144,
				1,
				490,
				29,
				46,
				509,
				196,
				225,
				287,
				149,
				501
			],
			"categories": [
				{
					"title": "Other",
					"children": [
						490,
						509,
						287,
						501
					]
				},
				{
					"title": "Structure",
					"children": [
						254,
						144,
						1,
						29,
						46,
						196,
						225,
						149
					]
				}
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				486,
				352,
				388,
				411,
				391,
				370,
				455,
				270,
				471,
				463
			]
		}
	],
	"sources": [
		{
			"fileName": "lib/index.ts",
			"line": 1,
			"character": 0
		}
	]
}